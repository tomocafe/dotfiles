#!/bin/bash

# Moves the active window to center stage, with a relative size as a percentage of the screen
# or incrementally increase/decrease size with +/-

usage () {
    local this="${BASH_SOURCE[0]##*/}"
    echo "$this [+/-]" 1>&2
    echo "$this <size>" 1>&2
    echo "$this" 1>&2
}

MIN_SIZE=20
MAX_SIZE=100
INC=5

get_curr_size () {
    # Sets SIZE to maximum of window to screen ratio using height or width
    # maxdepth=0 restricts search to the root window, which yields screen geometry
    eval $(xdotool search --maxdepth 0 --class "" getwindowgeometry --shell)
    local screen_width=$WIDTH
    local screen_height=$HEIGHT
    eval $(xdotool getactivewindow getwindowgeometry --shell)
    WSIZE=$(( 100 * WIDTH / screen_width ))
    HSIZE=$(( 100 * HEIGHT / screen_height ))
    SIZE=$(( WSIZE > HSIZE ? WSIZE : HSIZE ))
}

# Center window only -- do not resize
if [[ $# -eq 0 ]]; then
    get_curr_size
    w_gutter=$(( (100 - WSIZE) / 2 ))
    h_gutter=$(( (100 - HSIZE) / 2 ))
    exec xdotool getactivewindow windowmove ${w_gutter}% ${h_gutter}%
fi

# Resize and center
case "$1" in
    +)
        get_curr_size
        SIZE=$(( SIZE > MAX_SIZE - INC ? MAX_SIZE : SIZE + INC ))
        ;;
    -)
        get_curr_size
        SIZE=$(( SIZE > MIN_SIZE + INC ? SIZE - INC : MIN_SIZE ))
        ;;
    [0-9]*)
        SIZE=$1
        ;;
    *)
        usage
        exit 1
        ;;
esac

gutter=$(( (100 - SIZE) / 2 ))
xdotool getactivewindow windowsize ${SIZE}% ${SIZE}% windowmove ${gutter}% ${gutter}%

