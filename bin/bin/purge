#!/usr/bin/env python3

import os
import argparse
import glob

def purge(f, args):
    backupdir = ['{{{}}}'.format(','.join(args.I))] + ['*'] * (args.depth - 1)
    dirs = os.path.normpath(f).split(os.path.sep)
    for i in range(1, len(dirs) - 1):
        newdirs = dirs[:]
        newdirs[i:i] = backupdir
        print(newdirs)

def main():
    parser = argparse.ArgumentParser(description='Purges files from backup/snapshot directories', epilog="""
    TODO
    """)
    parser.add_argument('files', nargs='+', help='Files to purge')
    req = parser.add_argument_group('required arguments')
    req.add_argument('-I', metavar='DIRNAME', action='append', required=True, help='Backup directory name')
    req.add_argument('-d', '--depth', type=int, required=True, help='Depth of the backup directory structure')
    parser.add_argument('-f', '--force', action='store_true', help='Do not interactively prompt for each removal')
    parser.add_argument('-a', '--all', action='store_true', help='Purge backed up versions of FILES even if their inodes do not match')

    args = parser.parse_args()

    for f in args.files:
        purge(f, args)

if __name__ == '__main__':
    main()

